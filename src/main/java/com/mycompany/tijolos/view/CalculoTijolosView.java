
package com.mycompany.tijolos.view;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Giuliano Vianna
 */
public class CalculoTijolosView extends javax.swing.JFrame {

    /**
     * Creates new form frmCalculoTijolos
     */
    public CalculoTijolosView() {
        initComponents();

        //Centralizar janela
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbxTipoTijolo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtLargura = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAltura = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotalM2 = new javax.swing.JTextField();
        txtQuantidadeTijolos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculo de Tijolos");
        setResizable(false);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 51, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Calculo de Tijolos por M2");

        cbxTipoTijolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbxTipoTijolo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "6 furos", "8 furos", "9 furos" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Tipo de Tijolo");

        txtLargura.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLargura.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Largura");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Altura");

        txtAltura.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAltura.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Total m2");

        txtTotalM2.setEditable(false);
        txtTotalM2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTotalM2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtQuantidadeTijolos.setEditable(false);
        txtQuantidadeTijolos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuantidadeTijolos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Qt. Tijolos");

        btnCalcular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbxTipoTijolo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLargura, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTotalM2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantidadeTijolos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel7)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxTipoTijolo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLargura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalM2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidadeTijolos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

        calcularTotalTijolos();
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed

        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed

        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculoTijolosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculoTijolosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculoTijolosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculoTijolosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculoTijolosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbxTipoTijolo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextField txtLargura;
    private javax.swing.JTextField txtQuantidadeTijolos;
    private javax.swing.JTextField txtTotalM2;
    // End of variables declaration//GEN-END:variables

    /**
     * Calcula o total de tijolos necessários com base nas dimensões fornecidas.
     * <p>
     * Este método realiza os seguintes passos:
     * <ol>
     * <li>Verifica se os campos necessários estão preenchidos.</li>
     * <li>Converte os valores de largura e altura de String para double.</li>
     * <li>Calcula a área total e a quantidade de tijolos necessária.</li>
     * <li>Atualiza a interface gráfica com os resultados calculados.</li>
     * </ol>
     * <p>
     * Em caso de erros de formatação nos campos de largura e altura, o usuário
     * é notificado com uma mensagem de erro apropriada. Para qualquer outra
     * exceção não prevista, uma mensagem genérica de erro é exibida.
     *
     * @throws ParseException Se houver erro na conversão de valores de largura
     * ou altura.
     * @throws Exception Qualquer outra exceção não prevista.
     */
    private void calcularTotalTijolos() {
        try {
            if (!verificacaoCampos()) {
                return;
            }

            NumberFormat formatador = NumberFormat.getNumberInstance(Locale.getDefault());

            double largura, altura;

            try {
                largura = formatador.parse(txtLargura.getText()).doubleValue();
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Favor informar um valor válido para a Largura!",
                        "Erro de Formato", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                altura = formatador.parse(txtAltura.getText()).doubleValue();
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Favor informar um valor válido para a Altura!",
                        "Erro de Formato", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String tipoTijolo = cbxTipoTijolo.getSelectedItem().toString();
            double totalM2 = largura * altura;
            DecimalFormat df = new DecimalFormat("#.00");
            txtTotalM2.setText(df.format(totalM2));

            txtQuantidadeTijolos.setText(String.format("%.0f", calcularQuantidadeTijolos(totalM2, tipoTijolo)));

        } catch (Exception e) {
            // Tratamento genérico de erro para qualquer outra exceção não prevista
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Calcula a quantidade de tijolos necessária com base na área e no tipo de
     * tijolo.
     * <p>
     * Este método usa a área fornecida e o tipo de tijolo para calcular quantos
     * tijolos são necessários. O cálculo é baseado em valores fixos de área
     * coberta por diferentes tipos de tijolos, identificados pelo número de
     * furos.
     * </p>
     *
     * <p>
     * <b>Detalhes do Cálculo:</b>
     * <ul>
     * <li>Para tijolos de 6 furos: a área coberta é de 0.0252 metros quadrados
     * por tijolo.</li>
     * <li>Para tijolos de 8 furos: a área coberta é de 0.0361 metros quadrados
     * por tijolo.</li>
     * <li>Para tijolos de 9 furos: a área coberta é de 0.0551 metros quadrados
     * por tijolo.</li>
     * </ul>
     * Se um tipo de tijolo não reconhecido for fornecido, o método retornará 0.
     * </p>
     *
     * @param area A área total em metros quadrados onde os tijolos serão
     * usados.
     * @param tipoTijolo O tipo de tijolo a ser utilizado (por exemplo, "6
     * furos", "8 furos", "9 furos").
     * @return A quantidade total de tijolos necessários para cobrir a área
     * especificada. Retorna 0 se o tipo de tijolo não for reconhecido.
     */
    private double calcularQuantidadeTijolos(double area, String tipoTijolo) {
        switch (tipoTijolo) {
            case "6 furos":
                return area / 0.0252;
            case "8 furos":
                return area / 0.0361;
            case "9 furos":
                return area / 0.0551;
            default:
                return 0;
        }
    }

    /**
     * Verifica se os campos de entrada para largura, altura e tipo de tijolo
     * estão adequadamente preenchidos.
     * <p>
     * Este método checa se os campos de texto para a largura e a altura não
     * estão vazios e se um tipo de tijolo foi selecionado. Se qualquer um
     * desses campos estiver vazio ou não selecionado, uma mensagem de
     * informação é exibida para o usuário, pedindo para preencher as
     * informações corretamente.
     * </p>
     *
     * <p>
     * <b>Detalhes:</b>
     * <ul>
     * <li>Verifica se o campo de texto para a largura não está vazio.</li>
     * <li>Verifica se o campo de texto para a altura não está vazio.</li>
     * <li>Verifica se um tipo de tijolo foi selecionado na caixa de
     * combinação.</li>
     * </ul>
     * Se qualquer uma dessas condições não for atendida, a mensagem de
     * informação é exibida e o método retorna {@code false}. Caso contrário,
     * retorna {@code true}.
     * </p>
     *
     * @return {@code true} se todos os campos estiverem preenchidos
     * corretamente; {@code false} caso contrário.
     */
    private boolean verificacaoCampos() {

        if (txtLargura.getText().equals("") || txtAltura.getText().equals("")
                || cbxTipoTijolo.getSelectedItem().equals("Selecione")) {

            JOptionPane.showMessageDialog(null, "Favor informar as medidas e o tipo do tijolo!", "Informação",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }

        return true;
    }

    /**
     * Limpa ou reinicia todos os campos de entrada da interface gráfica.
     * <p>
     * Este método é responsável por limpar os campos de texto para a largura,
     * altura, a quantidade de tijolos calculada, e o total de metros quadrados.
     * Além disso, redefine a seleção na caixa de combinação do tipo de tijolo
     * para o estado inicial.
     * </p>
     *
     * <p>
     * <b>Campos Afetados:</b>
     * <ul>
     * <li>Limpa o campo de texto 'txtAltura'.</li>
     * <li>Limpa o campo de texto 'txtLargura'.</li>
     * <li>Limpa o campo de texto 'txtQuantidadeTijolos'.</li>
     * <li>Limpa o campo de texto 'txtTotalM2'.</li>
     * <li>Reinicia a seleção no campo 'cbxTipoTijolo' para 'Selecione'.</li>
     * </ul>
     * </p>
     *
     * Este método não retorna nenhum valor e não aceita parâmetros de entrada.
     */
    private void limparCampos() {

        txtAltura.setText("");
        txtLargura.setText("");
        txtQuantidadeTijolos.setText("");
        txtTotalM2.setText("");
        cbxTipoTijolo.setSelectedItem("Selecione");
    }

}
